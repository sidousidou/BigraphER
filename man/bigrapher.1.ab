.TH "BIGRAPHER" 1 "" "BigraphER ${pkg_version}" "BigraphER Manual"
.SH NAME
bigrapher \- implementation of Bigraphical Reactive Systems
.SH SYNOPSIS
.P
bigrapher [--version] 
.br
bigrapher [--help|-h]
.br
bigrapher <model-file> [predicates-file] [options]
.SH DESCRIPTION
.P
bigrapher 
is an implementation of Bigraphical Reactive Systems (BRS) that
supports bigraphs with sharing, stochastic reaction rules, rule
priorities and BiLog predicate checking. The bigraph matching engine
is based on a SAT encoding of the subgraph isomorphism problem. A BRS
and its labelling function can be exported to text files in
.I tra
and
.I csl
format, respectively, and used in stochastich model checker PRISM
.I (http://www.prismmodelchecker.org/)
to carry out quantitative
analysis.  The graphical representation of bigraphs is generated by
the automatic layout generator Graphviz
.I (http://www.graphviz.org/).
.SH OPTIONS
.P
.IP "-c, --consts x=val,..."
Specify a list of constants.
.IP "-d, --export-dot [file]"
Export the transition system to 
.I dot 
format.
.IP "-f, --export-states"
Export each state to
.I dot
or
.I svg
format. This option may only be used in conjuntion with options 
.I -d 
or 
.I --export-dot 
and 
.I -g
or 
.I -export-svg
.
.IP "-g, --export-svg [file]"
Export the transition system to
.I svg
format.
.IP "-h, --help"
Show this help.
.IP "-i, --export-store [dir]"
Export each declaration in the model to 
.I dot 
format. Dummy values may be used to instantiate functional values.
.IP "-l, --export-labels [file]"
Export the labelling function to PRISM
.I csl
format.
.IP "-m, --max-states [int]"
Set the maximum number of states. The argument must be positive.
.IP "-p, --export-prism [outfile]"
Export the transition system to PRISM 
.I tra 
format.
.IP "-s, --simulation <float>"
Simulate the model. The optional argument sets the maximum simulation
time. It must be positive.
.IP "-v, --verbose"
Be more verbose.
.IP "--version"     
Show version information.
.SH AUTHOR
.P
Michele Sevegnani <Michele.Sevegnani@glasgow.ac.uk>
